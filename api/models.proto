syntax = "proto3";
option java_multiple_files = true;
package ru.leo.models.grpc;

service ModelsService {
  // Загружает заданную модель
  rpc LoadModel(LoadModelRequest) returns (LoadModelResponse);
  // Cписок загруженных моделей, доступных для инференса
  rpc ModelList(ModelListRequest) returns (ModelListResponse);
  // Получить предсказания для заданных векторов фичей.
  rpc ModelInference(ModelInferenceRequest) returns (ModelInferenceResponse);
}

message LoadModelRequest {
  string model_name = 1;
}

message LoadModelResponse {
}

message ModelListRequest {

}

message ModelListResponse {
  repeated string model_names = 1;
}

message ModelInferenceRequest {
  string model_name = 1;
  repeated FeatureVector feature_vectors = 2;
}

message FeatureVector {
  repeated float features = 1;
}

message ModelInferenceResponse {
  repeated double predictions = 1;
}